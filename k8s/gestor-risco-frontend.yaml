---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gestor-risco-frontend-config
  namespace: ns-gestor-risco
  labels:
    app.kubernetes.io/name: gestor-risco-frontend
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: kubectl
data:
  VITE_SAP_CONNECTOR_URL: "https://api.gestor-risco.revvobr.com.br"
  VITE_API_URL: "https://api.gestor-risco.revvobr.com.br"

---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gestor-risco-frontend
  namespace: ns-gestor-risco
  labels:
    app.kubernetes.io/name: gestor-risco-frontend
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: kubectl
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gestor-risco-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gestor-risco-frontend
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "false"
        prometheus.io/path: "/"
        prometheus.io/port: "80"
    spec:
      serviceAccountName: gestor-risco-frontend-sa
      containers:
      - name: gestor-risco-frontend
        image: "${ARTIFACT_REGISTRY}gestor-risco-frontend/revvo-gestor-risco:${IMAGE_TAG}"
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        envFrom:
        - configMapRef:
            name: gestor-risco-frontend-config
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      terminationGracePeriodSeconds: 60
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-type
                operator: In
                values:
                - "spot"
          - weight: 50
            preference:
              matchExpressions:
              - key: spot
                operator: In
                values:
                - "true"
      tolerations:
      - key: "cloud.google.com/gke-spot"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: gestor-risco-frontend-service
  namespace: ns-gestor-risco
  labels:
    app.kubernetes.io/name: gestor-risco-frontend
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: kubectl
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: gestor-risco-frontend

---
# PodDisruptionBudget para Frontend
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: gestor-risco-frontend-pdb
  namespace: ns-gestor-risco
  labels:
    app.kubernetes.io/name: gestor-risco-frontend
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: kubectl
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: gestor-risco-frontend
